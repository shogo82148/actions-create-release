name: "test"
on:
  pull_request:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          npm ci
      - name: build
        run: |
          npm run build
          npm run package
      - name: test
        run: |
          npm test

  check-permission:
    name: check permission
    runs-on: ubuntu-latest
    outputs:
      permission: ${{ steps.check.outputs.permission }}
    steps:
      - id: check
        uses: shogo82148/actions-check-permissions@v1

  integrated:
    name: integrated test
    runs-on: ubuntu-latest
    needs:
      - check-permission
    if: needs.check-permission.outputs.permission == 'write'
    outputs:
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies
        run: |
          npm ci
      - name: build
        run: |
          npm run build
          npm run package

      - name: Create Release
        id: create_release
        uses: ./
        with:
          tag_name: test-${{ github.run_id }}
          release_name: Test for ${{ github.run_id }}
          prerelease: true
          body: |
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          discussion_category_name: "CI: Integration testing"

  cleanup:
    if: always()
    name: cleanup
    runs-on: ubuntu-latest
    needs:
      - integrated
    steps:
      - name: cleanup
        run: |
          curl -XDELETE -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/releases/${{ needs.integrated.outputs.id }}"
          curl -XDELETE -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN" \
            "$GITHUB_API_URL/repos/${{ github.repository }}/git/refs/tags/test-${{ github.run_id }}"
        if: always()
        env:
          GITHUB_TOKEN: ${{ github.token }}
